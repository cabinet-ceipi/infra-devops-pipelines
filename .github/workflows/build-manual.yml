name: 🐳 Manual Docker Build (branch auto)

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  DOCKERFILE: ./Dockerfile
  CONTEXT: .

concurrency:
  group: ${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: true

jobs:
  build-dev-on-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout de la branche actuelle
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Générer le tag basé sur la branche
        id: tags
        run: |
          IMAGE_NAME_LOWER="$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
          BRANCH="${GITHUB_REF_NAME##*/}"
          CLEAN_BRANCH="$(echo "$BRANCH" | sed 's#[/ ]#-#g' | tr '[:upper:]' '[:lower:]')"
          PROD_TAG="${{ env.REGISTRY }}/${IMAGE_NAME_LOWER}:${CLEAN_BRANCH}"

          echo "image_repo=${{ env.REGISTRY }}/${IMAGE_NAME_LOWER}" >> $GITHUB_OUTPUT
          echo "branch=${CLEAN_BRANCH}" >> $GITHUB_OUTPUT
          echo "prod_tag=${PROD_TAG}" >> $GITHUB_OUTPUT

      - name: 📄 Copier .env.devops -> .env
        run: cp .env.devops .env

      - name: 🏗️ Build & push Docker
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.tags.outputs.prod_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📝 Sortie
        run: |
          echo "Registry : ${{ env.REGISTRY }}"
          echo "Repo     : ${{ steps.tags.outputs.image_repo }}"
          echo "Branche  : ${{ steps.tags.outputs.branch }}"
          echo "Tag PROD : ${{ steps.tags.outputs.prod_tag }}"
